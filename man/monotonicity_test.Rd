% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/main.R
\name{monotonicity_test}
\alias{monotonicity_test}
\title{Perform Monotonicity Test}
\usage{
monotonicity_test(
  X,
  Y,
  bandwidth = bw.nrd(X) * (length(X)^-0.1),
  boot_num = 200,
  m = floor(0.05 * length(X)),
  ncores = 1,
  negative = FALSE
)
}
\arguments{
\item{X}{Numeric vector of predictor variable values. Must not contain missing or infinite values.}

\item{Y}{Numeric vector of response variable values. Must not contain missing or infinite values.}

\item{bandwidth}{Numeric value for the kernel bandwidth. Default is calculated as \code{bw.nrd(X) * (length(X) ^ -0.1)}.}

\item{boot_num}{Integer specifying the number of bootstrap samples. Default is \code{200}.}

\item{m}{Integer parameter used in the calculation of the test statistic. Corresponds to the minimum window size
to calculate the test statistic over. Default is \code{floor(0.05) * length(X)}.}

\item{ncores}{Integer specifying the number of cores to use for parallel processing. Default is \code{1}.}

\item{negative}{Logical value indicating whether to test for a monotonic decreasing (negative) relationship. Default is \code{FALSE}.}
}
\value{
A list with the following components:
\describe{
  \item{\code{p}}{The p-value of the test.}
  \item{\code{dist}}{The distribution of test statistics from bootstrap samples.}
  \item{\code{stat}}{The test statistic calculated from the original data.}
}
}
\description{
Performs a monotonicity test between the vectors \code{X} and \code{Y} as described in Hall and Heckman (2000).
This function uses a bootstrap approach to test for monotonicity in a nonparametric regression setting.
}
\details{
\strong{The test evaluates the following hypotheses:}

\strong{\eqn{H_0}}: The regression function is monotonic
\itemize{
  \item \emph{Non-decreasing} if \code{negative = FALSE}
  \item \emph{Non-increasing} if \code{negative = TRUE}
}

\strong{\eqn{H_A}}: The regression function is not monotonic
}
\note{
For large datasets (e.g., \eqn{n \geq 6500}) this function may require significant computation time due to having to compute the statistic for every possible interval.
Consider reducing \code{boot_num}, using a subset of the data, or using parallel processing with \code{ncores} to improve performance.
}
\examples{
# Generate sample data
X <- runif(100)
Y <- X^2 + rnorm(100, sd = 0.1)

# Perform monotonicity test
result <- monotonicity_test(X, Y, boot_num=1)
print(result$p)  # Display the p-value
}
\references{
Hall, P., & Heckman, N. E. (2000). Testing for monotonicity of a regression mean by calibrating for linear functions. \emph{The Annals of Statistics}, \strong{28}(1), 20â€“39.
}
